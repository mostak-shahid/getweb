import { useEffect, useState } from "react";
import { Button, Form } from "react-bootstrap";
import { useParams } from "react-router-dom";
import FileIcon from "../../assets/images/file.svg";
import Config from "../../Config.json";
import ReadyToMove from "../ReadyToMove/ReadyToMove";
import SuccessfulModal from "../SuccessfulModal/SuccessfulModal";
import "./JobApplicationForm.scss";

const JobApplicationForm = (props) => {
    //const location = useLocation();
    const params = useParams();
    const [show, setShow] = useState(false);
    const handleClose = () => setShow(false);
    //const handleShow = () => setShow(true);    
    const [loading,setLoading]=useState(true);
    const [jobs,setJobs]=useState([]);
    //const [formPocessing,setFormPocessing]=useState([]);

    useEffect(()=>{
        const url = Config.API_BASE + "data-list/job/0";//api url
        fetch(url).then(resp=>resp.json())//calling url by method GET
        .then(resp=>setJobs(resp))//setting response to state posts
    },[]); 
    
    useEffect(() => {
        if (jobs.length !== 0) {
            setLoading(false);
        }
    }, [jobs]);
    const [values, setValues] = useState({
        job_id: params.slug,
        first_name: "",
        last_name: "",
        email: "",
        country: "",
        cv: null,
    });     
    const handlerChange = (element) => {
        setValues({ ...values, [element.target.name]: element.target.value });
    };
    const handlerFileChange = (element) => {
        setValues({ ...values, [element.target.name]: element.target.files[0] });
        //console.log(element.target.files[0]);
    };
    const handleSubmit = (event) => {
        event.preventDefault();
        //setFormPocessing(true);
        const formData = new FormData();
        formData.append("id", 1);
        formData.append("job_id", values.job_id);
        formData.append("first_name", values.first_name);
        formData.append("last_name", values.last_name);
        formData.append("email", values.email);
        formData.append("country", values.country);
        formData.append("cv", values.cv);

        console.log('Form Data: ',formData);
        console.log('Values: ', values);

        (async () => {
        const rawResponse = await fetch(Config.API_BASE + 'job-apply', {
            method: 'POST',
            headers:{
                'Accept': 'application/json',
                //'content-type': 'application/json',
                "content-type": "multipart/form-data"
            },
            // body: JSON.stringify({ job_id: values.job_id, first_name: values.first_name, last_name: values.last_name, email: values.email, country: values.country, cv: values.cv })
            body: formData
        })
        ;//.then(resp=>resp.json())//calling url by method GET
        //.then(resp=>setFormResponseData(resp))//setting response to state posts
        //.then(setFormResponse(true));
        const content = await rawResponse.json();
        console.log(content.req);
        /*if(content.req.data.status) {
            setFormPocessing(false);
            setValues({
                name: "",
                email: "",
                code: "",
                phone: "",
                message: "",
            });
            setErrors ({
                name: "",
                email: "",
                code: "",
                phone: "",
                message: "",
            })
            setResMessage('Your form has beed submitted successfully.')
        } else {
            setFormPocessing(false);
            setResMessage('Please try again.')
        }*/
        //console.count();
        })();
    }

    return (
        loading
        ?<div className="textClrGreen text-center d-none">loading...</div>
        :<>
            <section className="JobDetails">
                <div className="JobDetailsBanner bgClrDarkLight">
                    <div className="container-lg">
                        <div className="JobBannerContent d-flex align-items-center">
                            <div className="content">
                                <h2 className="jobTitle fs-48 fw-bold text-white mb-4">Job Application Form</h2>
                                <div className="jobIntro fs-18 text-white fw-normal">
                                    <p className="mb-0">
                                        Working with our clients' point of contact to build low and high-fidelity website wireframes that utilize the most effective strategies and remain within the goals
                                        of our client.
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div className="JobApplicationForm secPadding">
                    <div className="container-lg">
                        <div className="row">
                            <div className="col-lg-6 offset-lg-3">
                                <div className="ApplicationForm bgClrSolitude isRadius16 p-4 p-lg-5">
                                    <div className="contactHeader mb-4">
                                        <h2 className="textClrThemeDark fs-4 fw-bold mb-3">Fillup the Job Application Form</h2>
                                        <p className="textClrGrayDark fs-6 fw-normal mb-0">It usually takes us up to 48 hours to get back to you.</p>
                                    </div>
                                    <Form onSubmit={handleSubmit}>
                                        <div className="row">
                                            <div className="col-lg-12">
                                                <Form.Group className="selectJobTitle mb-3" controlId="formBasicContactNumber">
                                                    <Form.Label className="textClrThemeDark fs-13 fwSemiBold">Job Title</Form.Label>
                                                    {/* <Select options={options} /> */}
                                                    <Form.Select name="job_id" className="rounded-pill h-42 px-4" defaultValue={params.slug} disabled>
                                                        <option value="0">Position applying for</option>
                                                        {
                                                            jobs.map((item, index) => (
                                                                <option value={item.slug} key={index} dangerouslySetInnerHTML={{__html:item.title}} />
                                                            ))
                                                        }
                                                    </Form.Select>
                                                </Form.Group>
                                            </div>
                                            <div className="col-lg-6">
                                                <Form.Group className="field mb-4" controlId="formBasicFName">
                                                    <Form.Label className="textClrThemeDark fs-13 fwSemiBold">First Name</Form.Label>
                                                    <Form.Control name="first_name" type="text" placeholder="Enter your first name" className="rounded-pill h-42 px-4" onChange={handlerChange} value={values.first_name} />
                                                </Form.Group>
                                            </div>
                                            <div className="col-lg-6">
                                                <Form.Group className="field mb-4" controlId="formBasicLName">
                                                    <Form.Label className="textClrThemeDark fs-13 fwSemiBold">Last Name</Form.Label>
                                                    <Form.Control name="last_name" type="text" placeholder="Enter your last name" className="rounded-pill h-42 px-4" onChange={handlerChange} value={values.last_name}  />
                                                </Form.Group>
                                            </div>
                                            <div className="col-lg-6">
                                                <Form.Group className="field mb-4" controlId="formBasicEmail">
                                                    <Form.Label className="textClrThemeDark fs-13 fwSemiBold">Email</Form.Label>
                                                    <Form.Control name="email" type="email" placeholder="Enter your email" className="rounded-pill h-42 px-4" onChange={handlerChange} value={values.email} />
                                                </Form.Group>
                                            </div>
                                            <div className="col-lg-6">
                                                <Form.Group className="field mb-4" controlId="formBasicCountry">
                                                    <Form.Label className="textClrThemeDark fs-13 fwSemiBold">Country</Form.Label>
                                                    <Form.Select name="country" className="rounded-pill h-42 px-4" onChange={handlerChange} defaultValue={values.country}>
                                                        <option>Select your country</option>
                                                        <option value="1">Bangladesh</option>
                                                        <option value="2">USA</option>
                                                        <option value="3">UK</option>
                                                        <option value="3">Canada</option>
                                                        <option value="3">India</option>
                                                    </Form.Select>
                                                </Form.Group>
                                            </div>
                                            <div className="col-lg-12">
                                                <Form.Group controlId="formFile" className="mb-3">
                                                    <Form.Label className="textClrThemeDark fs-13 fwSemiBold d-block">
                                                        <p className="mb-2">Upload CV</p>
                                                        <Form.Control name="cv" type="file" className="d-none" /*onChange={(e) => console.log(e.target.files[0])}*/ onChange={handlerFileChange} />
                                                        <div className="fileBody bg-white p-4 isRadius12 d-flex justify-content-center align-items-center gap-3 gap-xl-4">
                                                            <img src={FileIcon} alt="icon" />
                                                            <p className="fs-14 fw-medium textClrGray mb-0">Upload your CV testing</p>
                                                        </div>
                                                    </Form.Label>
                                                </Form.Group>
                                            </div>
                                            <div className="sbm-btn text-end">
                                                <Button type="submit" className="btn bgClrGreen w-100 h-42 textClrThemeDark fs-14 fwSemiBold border-0 py-2 px-4 rounded-pill">
                                                    Submit Application
                                                </Button>
                                            </div>
                                            <SuccessfulModal show={show} handleClose={handleClose} />
                                        </div>
                                    </Form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <ReadyToMove />
            </section>
        </>
    );
};

export default JobApplicationForm;
